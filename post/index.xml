<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Caofulei</title>
    <link>http://cfl997.github.io/post/</link>
    <description>Recent content in Posts on Caofulei</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://cfl997.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【VTK】三种面切片数据 加载模型 scalars设置颜色透明度 加载raw 医学数据</title>
      <link>http://cfl997.github.io/2025/03/14/VTK/</link>
      <pubDate>Fri, 14 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2025/03/14/VTK/</guid>
      <description>【VTK】三种面切片数据 加载模型 scalars设置颜色透明度 加载raw 医学数据 项目地址 GitHub : https://github.com/cfl997/VTKSample loadobj.png</description>
    </item>
    
    <item>
      <title>【CFLRenderAPI】 一、整体框架 和 基本配置</title>
      <link>http://cfl997.github.io/2025/02/22/CFLRenderAPI/</link>
      <pubDate>Sat, 22 Feb 2025 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2025/02/22/CFLRenderAPI/</guid>
      <description>CFLRenderAPI 项目文档 项目地址： GitHub : https://github.com/cfl997/CFLRenderAPI 项目概述 CFLRenderAPI 是一个跨平台的渲染引擎，旨在为上层应用提供统一的API接口，支持OpenGL和DirectX两种渲染后端</description>
    </item>
    
    <item>
      <title>【WebGL】动态点</title>
      <link>http://cfl997.github.io/2025/01/24/webgldynamicpoint/</link>
      <pubDate>Fri, 24 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2025/01/24/webgldynamicpoint/</guid>
      <description>添加鼠标点击事件 绘制位置，pointsize为60 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=edge&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;script src=&amp;#34;glMatrix-0.9.6.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; class WebGLApp { constructor() { this.vertexString = ` attribute vec3 a_position; uniform mat4 proj; void main(void){ gl_Position = vec4(a_position, 1.0); gl_PointSize = 60.0; } `; this.fragmentString =</description>
    </item>
    
    <item>
      <title>【WebGL】静态点</title>
      <link>http://cfl997.github.io/2025/01/23/webglstaticpoint/</link>
      <pubDate>Thu, 23 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2025/01/23/webglstaticpoint/</guid>
      <description>资源glMatrix 官网： https://glmatrix.net/ &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;script src=&amp;#34;glMatrix-0.9.6.min.js&amp;#34;&amp;gt; //加载封好的库 //https://glmatrix.net/ &amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; class WebGLApp { constructor() { this.vertexString = ` attribute vec4 pos; uniform mat4 proj; void main(void){ gl_Position = proj * pos; gl_PointSize = 60.0; } `; this.fragmentString = ` void main(void){</description>
    </item>
    
    <item>
      <title>自动打开网页点击PT站点签到</title>
      <link>http://cfl997.github.io/2025/01/22/cflChromePick/</link>
      <pubDate>Wed, 22 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2025/01/22/cflChromePick/</guid>
      <description>版本： https://github.com/cfl997/cflChromePick/releases/tag/20250122 总体：浏览器打开指定网页，点击任意指定（href判定）按钮 功能： 保持浏览器登录状态，打开默认用户文件 模拟点击签到（点击按钮自行设置：</description>
    </item>
    
    <item>
      <title>智能家居</title>
      <link>http://cfl997.github.io/2025/01/21/smarthome/</link>
      <pubDate>Tue, 21 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2025/01/21/smarthome/</guid>
      <description>目前家电包含：国家电网，天气，手机，海尔，homekit，tuya，石头，易微联，小米，三菱重工&amp;hellip;&amp;hellip; 目前设备有1</description>
    </item>
    
    <item>
      <title>书法入选</title>
      <link>http://cfl997.github.io/2024/10/24/Calligraphy/</link>
      <pubDate>Thu, 24 Oct 2024 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2024/10/24/Calligraphy/</guid>
      <description>截稿前一周，想着写字那么多年了也没投过展，要不这次试试吧，能入选就行。 写了一遍，太丑了，再来一遍，就投了。 预期：入选 结果：入选</description>
    </item>
    
    <item>
      <title>Nodepad&#43;&#43; 不当言论</title>
      <link>http://cfl997.github.io/2024/08/16/Nodepad/</link>
      <pubDate>Fri, 16 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2024/08/16/Nodepad/</guid>
      <description>今天更新Nodepad++ 但是看到官网上的不当言论非常生气 虽然他是个跨平台好用的文本编辑软件，但作为一个中国人，台湾分裂绝不支持，以后再也不</description>
    </item>
    
    <item>
      <title>CUDA use OpenGL Texture R16 and RGBA EqualizeHistogram</title>
      <link>http://cfl997.github.io/2024/06/01/CUDA%20OpenGL/</link>
      <pubDate>Sun, 02 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2024/06/01/CUDA%20OpenGL/</guid>
      <description>cuda和OpenGL纹理结合，并进行直方图计算 针对于单通道16位图像。结合方式在CUDA_equalizeHistogram函数中。 其他的</description>
    </item>
    
    <item>
      <title>Swig CMakeLists</title>
      <link>http://cfl997.github.io/2024/05/19/Swig%20CMakeLists/</link>
      <pubDate>Sun, 19 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2024/05/19/Swig%20CMakeLists/</guid>
      <description>swig转换的cmake配置很乱 没有一个详细的解释。 当将.i文件单独拎出来生成一个单独的dll非常的麻烦。 于是采用最简便的方法。 并且生成的d</description>
    </item>
    
    <item>
      <title>ffmpeg7.0 visual studio 2022 static lib dll</title>
      <link>http://cfl997.github.io/2024/05/12/ffmpeg7%20visual%20studio%202022%20static%20lib%20dll/</link>
      <pubDate>Sun, 12 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2024/05/12/ffmpeg7%20visual%20studio%202022%20static%20lib%20dll/</guid>
      <description>FFmpeg 7.0 + Visual Studio 2022 静态库编译使用指南 本指南详细介绍了如何在 Windows 环境下使用 Visual Studio 2022 和 FFmpeg 7.0 进行静态库编译，并解决可能遇到的依赖库问题。 1. 环境准备 确保已经安</description>
    </item>
    
    <item>
      <title>ffmpeg7.0 visual studio 2022</title>
      <link>http://cfl997.github.io/2024/05/1/ffmpeg7%20visual%20studio%202022/</link>
      <pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2024/05/1/ffmpeg7%20visual%20studio%202022/</guid>
      <description>后面有总结： 安装msys2 打开 （这一步非常重要不然就得指定vs的环境） x64 Native Tools Command Prompt for VS 2022 运行 在x64 Native Tools Command Prompt for VS 2022命令行中切换到msys</description>
    </item>
    
    <item>
      <title>glm::vec3 Memory Alignment</title>
      <link>http://cfl997.github.io/2024/01/21/glmvec3MemoryAlignment/</link>
      <pubDate>Sun, 21 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2024/01/21/glmvec3MemoryAlignment/</guid>
      <description>介绍 在OpenGL编程中，与顶点数据的交互是非常常见的操作。在C++中，通常会使用GLM库提供的数据结构，如glm::vec3，来表示顶点数</description>
    </item>
    
    <item>
      <title>NVIDIA OpenGL FramBuffer Bug-glCreateFramebuffers</title>
      <link>http://cfl997.github.io/2023/12/19/VNDIA/</link>
      <pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2023/12/19/VNDIA/</guid>
      <description>NVIDIA 的OpenGL FramBuffer Bug-glCreateFramebuffers ​ 在做OpenGL开发的时候，遇到了NVIDIA写的bug。 并进行了解决，在NVIDIA官网上进行了反馈。 Framebuffer incomplete when attaching color buffers of</description>
    </item>
    
    <item>
      <title>文档属性</title>
      <link>http://cfl997.github.io/2023/12/13/document%20attribute/</link>
      <pubDate>Wed, 13 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2023/12/13/document%20attribute/</guid>
      <description>#文档属性 layout：指定了文档的布局。 title：指定了文档的标题。 subtitle：指定了文档的副标题。 date：指定了文档的日期。 a</description>
    </item>
    
    <item>
      <title>Welcome to CaoFulei Blog</title>
      <link>http://cfl997.github.io/2023/12/11/hello-world/</link>
      <pubDate>Mon, 11 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2023/12/11/hello-world/</guid>
      <description>“Yeah It&amp;rsquo;s on. ” Hello World!</description>
    </item>
    
    <item>
      <title>Calculation method of gray value</title>
      <link>http://cfl997.github.io/2023/12/07/Gray/</link>
      <pubDate>Thu, 07 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2023/12/07/Gray/</guid>
      <description>Calculation method of gray value 三种不同计算灰度的方式 ShaderToy https://www.shadertoy.com/view/mlVBRh Code： /* https://www.shadertoy.com/view/mlVBRh Blog：https://blog.lovezjj.cn by cfl997 20231207 */ //Green vec3 GrayByGreen(vec3 color) { return vec3(color.g); } //Gray = R*0.3 + G*0.59</description>
    </item>
    
    <item>
      <title>Mosaic changing by time</title>
      <link>http://cfl997.github.io/2023/12/06/mosaic/</link>
      <pubDate>Wed, 06 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>http://cfl997.github.io/2023/12/06/mosaic/</guid>
      <description>Mosaic By Time 随着时间更新马赛克的大小 ShaderToy https://www.shadertoy.com/view/DlKBRh Code： /* https://www.shadertoy.com/view/DlKBRh Blog：https://blog.lovezjj.cn by cfl997 20231206 */ // 定义一个变量 Square，</description>
    </item>
    
  </channel>
</rss>
